plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'idea'
	id 'eclipse'
}


group = 'academy.digitallab.store'
version = '1.0.0'
sourceCompatibility = '11'


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


ext {
	set('springBootAdminVersion', "2.2.3")
	set('springCloudVersion', "Hoxton.SR6")
}

dependencies {
	implementation ('org.springframework.boot:spring-boot-starter-web'){
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
	}
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	compile group: 'org.springframework.retry', name: 'spring-retry', version: '1.3.0'

	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'

	compile (group: 'org.springframework.cloud', name: 'spring-cloud-netflix-hystrix-dashboard', version: '2.2.2.RELEASE'){
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
	}
	compile (group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix-dashboard', version: '2.2.2.RELEASE'){
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
	}
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'de.codecentric:spring-boot-admin-starter-client'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: '2.2.6.RELEASE'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	compile('org.springframework.boot:spring-boot-starter-jetty')
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'

	//implementation 'org.springframework.boot:spring-boot-starter-actuator'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	//


	//implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
	//implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard'

	//
	//runtimeOnly 'io.micrometer:micrometer-registry-prometheus'


	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
configurations {
	runtime.exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
}

test {
	useJUnitPlatform()
}